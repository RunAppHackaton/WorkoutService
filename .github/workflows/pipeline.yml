name: Build, Test, and Deploy

on:
  push:
    branches:
      - main

jobs:

  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 20
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '20'

      - name: Build with Maven
        run: mvn -B clean install -DskipTests

  Tests:
    runs-on: ubuntu-latest
    needs: [ Build ]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 20
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '20'

      - name: Run Tests with Maven
        run: mvn test

  Deploy_to_DockerHub:
    runs-on: ubuntu-latest
    needs: [ Tests ]
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Google auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.GCP_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Install dependencies
        run: ./.github/workflows/install_dependencies.sh

      - name: Copy secrets env file from Google Secret Manager to secrets.json
        run: gcloud secrets versions access latest --secret=WORKOUT-SERVICE-SECRETS-FILE > secrets.json

      - name: Extracting secrets from a secret file
        run: ./.github/workflows/extract_secrets.sh

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Build Docker image and Push
        run: ./.github/workflows/docker_build_and_push.sh ${{ github.sha }}

  Deploy_to_Google_Cloud:
    runs-on: ubuntu-latest
    needs: [ Tests ]
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.GCP_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Install dependencies
        run: ./.github/workflows/install_dependencies.sh

      - name: Copy secrets env file from Google Secret Manager to secrets.json
        run: gcloud secrets versions access latest --secret=WORKOUT-SERVICE-SECRETS-FILE > secrets.json

      - name: Extracting secrets from a secret file
        run: ./.github/workflows/extract_gcp_vars.sh

      - name: Docker auth in Google
        run: |-
          gcloud auth configure-docker $GCP_REGION-docker.pkg.dev

      - name: Generate hash for container image
        run: |-
          echo "IMAGE_TAG=$(date +%s | md5sum | cut -d ' ' -f 1)" >> "$GITHUB_ENV"

      - name: Build and push container to Google Artifact Registry
        run: ./.github/workflows/build_and_deploy_container_to_google_artifact.sh

      - name: Deploy to Cloud Run
        id: deploy
        run: ./.github/workflows/gcloud_deploy_to_cloud_run.sh

      - name: Send success deploy message
        env:
          CHAT_ID: ${{ vars.CHAT_ID }}
          BOT_TOKEN: ${{ vars.BOT_TOKEN }}
          PHOTO_URI: ${{ vars.PHOTO_URI }}
        run: ./.github/workflows/send_message_to_telegram.sh $CHAT_ID $BOT_TOKEN $PHOTO_URI
        if: success()

