server:
  port: ${SERVICE_SERVER_PORT}


springdoc:
  packagesToScan: com.runapp.workoutservice

eureka:
  client:
    enabled: false

spring:
  sql:
    init:
      mode: always
  datasource:
    url: jdbc:postgresql:///${DATABASE_NAME}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      data-source-properties:
        socketFactory: com.google.cloud.sql.postgres.SocketFactory
        cloudSqlInstance: ${SQL_INSTANCE_NAME}
        enableIamAuth: true
        sslmode: disable
      maximum-pool-size: 6
      minimum-idle: 5
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: true
    hibernate:
      ddl-auto: create-drop
    defer-datasource-initialization: true
  application:
    name: workout-service
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2MB
      max-file-size: 5MB
      max-request-size: 6MB
  cloud:
    service-registry:
      auto-registration:
        enabled: false
    openfeign:
      client:
        config:
          storage-service:
            url: ${STORAGE_SERVICE_URL}
          achievement-service:
            url: ${ACHIEVEMENT_SERVICE_URL}
          guild-service:
            url: ${GUILD_SERVICE_URL}
          shoes-service:
            url: ${SHOES_SERVICE_URL}
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

storage-directory: WorkoutService/
management:
  endpoints:
    web:
      exposure:
        include: ${ENDPOINTS_INCLUDE:*}
  endpoint:
    health:
      show-details: ${HEALTH_SHOW_DETAILS:always}
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_URL}
